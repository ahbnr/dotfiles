# fancy icons
set icons

map i $~/.config/lf/pv.sh $f | less -R

map gs cd ~/Documents/Studium/SoSe20
map gi cd /run/media/anton
map gt cd ~/trash
map gp cd ~/Documents/Projects
map gf cd ~/Documents/Flieden
map gd cd ~/Downloads
map S $$SHELL

cmd open $rifle "$f"
map <enter> open

# rename current file without overwrite
cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
map <f-6> push :rename<space>

# create directories
cmd mkdir %[ -e $1 ] && printf "path exists" || mkdir -p $1
map <f-7> push :mkdir<space>

# delete directories
cmd rmdir %[ -e $1 ] && rmdir $1 || printf "path does not exist"

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case "$f" in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf "$f";;
        *.tar.gz|*.tgz) tar xzvf "$f";;
        *.tar.xz|*.txz) tar xJvf "$f";;
        *.zip) unzip "$f";;
        *.rar) unrar x "$f";;
        *.7z) 7z x "$f";;
    esac
}}

#cmd open ${{
#    filename=$(basename -- "$f")
#    extension="${filename##*.}"
#
#    if [ "$extension" == "fods" ]; then
#      loffice "$fx"
#    else
#      case $(file --mime-type $f -b) in
#          application/pdf) qpdfview "$fx";;
#          text/*) nvim $fx;;
#          *) for f in $fx; do xdg-open $f > /dev/null 2> /dev/null & done;;
#      esac
#    fi
#}}

# fzf on ctrl-p/ctrl-f
cmd fzf_jump ${{
   res="$(fzf --reverse --header='Jump to location')"
   if [ -f "$res" ]; then
     cmd="select"
   elif [ -d "$res" ]; then
     cmd="cd"                                                       
   fi
lf -remote "send $id $cmd \"$res\""
}}
cmd fzf_search ${{
   res="$(ls | fzf --reverse --header='Jump to location')"
   if [ -f "$res" ]; then
     cmd="select"
   elif [ -d "$res" ]; then
     cmd="cd"                                                       
   fi
lf -remote "send $id $cmd \"$res\""
}}
map <c-f> :fzf_jump
map <c-p> :fzf_search
